

# IMPORTANT: Certain characters take 6 bytes of data which is more than the 4 utf-8 can handle


# Creates a dictionary of unicode characters starting from 'start' and ending at 'end'
# createUnicodeDict will create a dictionary of (end - start) + 1 length as it includes the newline character
# Typically you would want to start and 32 as that is where "latin" characters begin

def createUnicodeDict(start, end):
    dict_length = end - start
    
    dict_output = {
    "\n" : 0,
    }

    for i in range(dict_length):
        
        # To skip second set of command characters
        if (start == 127):
            start = 160
        dict_output[chr(start).encode("utf-8").decode("utf-8")] = i+1
        start += 1
    
    return dict_output
    

mapping_dict = createUnicodeDict(32, 1030)
#print(mapping_dict)
# This will cause errors with the array creation process
#mapping_dict = {
#  # Latin alphabet  
#  "a" : 0,
#  "b" : 1,
#  "c" : 2,
#  "d" : 3,
#  "e" : 4,
#  "f" : 5,
#  "g" : 6,
#  "h" : 7,
#  "i" : 8,
#  "j" : 9,
#  "k" : 10,
#  "l" : 11,
#  "m" : 12,
#  "n" : 13,
#  "o" : 14,
#  "p" : 15,
#  "q" : 16,
#  "r" : 17,
#  "s" : 18,
#  "t" : 19,
#  "u" : 20,
#  "v" : 21,
#  "w" : 22,
#  "x" : 23,
#  "y" : 24,
#  "z" : 25,
#  "A" : 26,
#  "B" : 27,
#  "C" : 28,
#  "D" : 29,
#  "E" : 30,
#  "F" : 31,
#  "G" : 32,
#  "H" : 33,
#  "I" : 34,
#  "J" : 35,
#  "K" : 36,
#  "L" : 37,
#  "M" : 38,
#  "N" : 39,
#  "O" : 40,
#  "P" : 41,
#  "Q" : 42,
#  "R" : 43,
#  "S" : 44,
#  "T" : 45,
#  "U" : 46,
#  "V" : 47,
#  "W" : 48,
#  "X" : 49,
#  "Y" : 50,
#  "Z" : 51,
#  "0" : 52,
#  "1" : 53,
#  "2" : 54,
#  "3" : 55,
#  "4" : 56,
#  "5" : 57,
#  "6" : 58,
#  "7" : 59,
#  "8" : 60,
#  "9" : 61,
#  "!" : 62,
#  "@" : 63,
#  "#" : 64,
#  "$" : 65,
#  "%" : 66,
#  "^" : 67,
#  "&" : 68,
#  "*" : 69,
#  "(" : 70,
#  ")" : 71,
#  "-" : 72,
#  "_" : 73,
#  "+" : 74,
#  "=" : 75,
#  "[" : 76,
#  "]" : 77,
#  "{" : 78,
#  "}" : 79,
#  ":" : 80,
#  ";" : 81,
#  "\"" : 82,
#  "\'" : 83,
#  "/" : 84,
#  "\\" : 85,
#  "|" : 86,
#  "," : 87,
#  "." : 88,
#  "<" : 89,
#  ">" : 90,
#  "?" : 91,
#  "~" : 92,
#  "`" : 93,
#
#  # Special Characters
#  " " : 94, # Space
#  "\n" : 95, # Newline
#  "🂣" : 96, # Carriage Return [Doesn't seem necessary]
#  "♤" : 97, # Windows and DOS terminate line [Doesn't seem necessary]
#  "♞" : 98, # Tab Character [Doesn't seem necessary]
#  
#  # Mathematical Symbols
#  "∑" : 99,
#  "∏" : 100,
#  "∀" : 101,
#  "∞" : 102,
#  "∃" : 103,
#  "∤" : 104,
#  "≠" : 105,
#  "≈" : 106,
#  "≅" : 107,
#  "≡" : 108,
#  "≢" : 109,
#  "√" : 110,
#  "∛" : 111,
#  "∜" : 112,
#  "≤" : 113,
#  "≥" : 114,
#  "≪" : 115,
#  "≫" : 116,
#  "⋘" : 117,
#  "⋙" : 118,
#  "∫" : 119,
#  "∬" : 120,
#  "∭" : 121,
#  "∮" : 122,
#  "∯" : 123,
#  "∰" : 124,
#  "°" : 125,
#  "∡" : 126,
#  "⟂" : 127,
#  "∥" : 128,
#  "∦" : 129,
#  "∝" : 130,
#  "⇒" : 131,
#  "⇐" : 132,
#  "⇔" : 133,
#  "∧" : 134,
#  "∨" : 135,
#  "∩" : 136,
#  "∪" : 137,
#  "ƒ" : 138,
#  "∂" : 139,
#  "ℕ" : 140,
#  "ℝ" : 141,
#  "ℚ" : 142,
#  "ℙ" : 143,
#  "ℤ" : 144,
#  "ℂ" : 145,
#  "∅" : 146,
#  "∈" : 147,
#  "∉" : 148,
#  "⊂" : 149,
#  "⊃" : 150,
#  "⊄" : 151,
#  "⊅" : 152,
#  "⊆" : 153,
#  "⊇" : 154,
#  "⊈" : 155,
#  "⊉" : 156,
#  "⊊" : 157,
#  "⊋" : 158,
#  "←" : 159,
#  "→" : 160,
#  "↑" : 161,
#  "↓" : 162,
#  
#  # Emojis and other symbols
#  "😀" : 163,
#  "😉" : 164,
#  "😁" : 165,
#  "😆" : 166,
#  "😅" : 167,
#  "😂" : 168,
#  "🤣" : 169,
#  "😊" : 170,
#  "🙂" : 171,
#  "😄" : 172,
#  "🙃" : 173,
#  "😇" : 174,
#  "😃" : 175,
#  "😍" : 176,
#  "🥰" : 177,
#  "😘" : 178,
#  "😎" : 179,
#  "🤓" : 180,
#  "🥸" : 181,
#  "🥳" : 182,
#  "🤪" : 183,
#  "😜" : 184,
#  "😢" : 185,
#  "😭" : 186,
#  "😤" : 187,
#  "😡" : 188,
#  "🤬" : 189,
#  "🤯" : 190,
#  "🥵" : 191,
#  "🥶" : 192,
#  "😱" : 193,
#  "🤥" : 194,
#  "🤫" : 195,
#  "😐" : 196,
#  "😑" : 197,
#  "😬" : 198,
#  "🙄" : 199,
#  "®" : 200,
#  "😮" : 201,
#  "🤤" : 202,
#  "😴" : 203,
#  "🥱" : 204,
#  "🤢" : 205,
#  "🤐" : 206,
#  "🤧" : 207,
#  "🥴" : 208,
#  "🤑" : 209,
#  "🤠" : 210,
#  "💀" : 211,
#  "😈" : 212,
#  "👿" : 213,
#  "👺" : 214,
#  "🤡" : 215,
#  "💩" : 216,
#  "👻" : 217,
#  "👍" : 218,
#  "👎" : 219,
#  "🤞" : 220,
#  "🤘" : 221,
#  "🖕" : 222,
#  "🙏" : 223,
#  "👀" : 224,
#  "🙌" : 225,
#  "👏" : 226,
#  "👊" : 227,
#  "★" : 228,
#  "🔴" : 229,
#  "🟠" : 230,
#  "🟡" : 231,
#  "🟢" : 232,
#  "🔵" : 233,
#  "🟣" : 234,
#  "☽" : 235,
#  "⚅" : 236,
#  "🟤" : 237,
#  "🟥" : 238,
#  "🟧" : 239,
#  "🟨" : 240,
#  "🟩" : 241,
#  "🟦" : 242,
#  "🟪" : 243,
#  "⚃" : 244,
#  "⚂" : 245,
#  "🟫" : 246,
#  "🚩" : 247,
#  "🌐" : 248,
#  "🔈" : 249,
#  "⚁" : 250,
#  "💔" : 251,
#  "💜" : 252,
#  "🖤" : 253,
#  "💙" : 254,
#

# Inversed Dictionary for reverse serach
inv_mapping_dict = {v: k for k, v in mapping_dict.items()}

